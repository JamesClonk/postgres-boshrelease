#!/bin/bash
<%
master = p('postgres.smoke-tests.cluster.master')
slaves = []
p('postgres.smoke-tests.cluster.slaves', []).each do |slave|
  if slave != master
    slaves.push(slave)
  end
end
%>

set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/smoke-tests/helpers/ctl_setup.sh 'smoke-tests'

check() {
    echo
    date
    pgrt -M <%= master %> \<% slaves.each do |slave| %>
         -S <%= slave %> \<% end %>
         -u <%= p('postgres.smoke-tests.target.username') %> \
         -w <%= p('postgres.smoke-tests.target.password') %> \
         -p <%= p('postgres.smoke-tests.backend.port') %> \
         -l <%= p('postgres.smoke-tests.thresholds.replication-lag', 64) * 1024 %>
    return $?
}

EXITSTATUS=0

# create the .pgpass file
rm -f ~/.pgpass
echo "*:*:*:<%= p('postgres.smoke-tests.target.username') %>:<%= p('postgres.smoke-tests.target.password') %>" \
    > ~/.pgpass
chmod 0600 ~/.pgpass

echo "INITIALIZING PGBENCH DATABASE"
pgbench -h <%= p('postgres.smoke-tests.target.address') %> \
        -p <%= p('postgres.smoke-tests.target.port') %> \
        -U <%= p('postgres.smoke-tests.target.username') %> \
        -i 2>&1

echo "STARTING PGBENCH IN THE BACKGROUND"
CPUS=$(grep -c ^processor /proc/cpuinfo)
CLIENTS=<%= p('postgres.smoke-tests.target.clients') %>
CLIENTS=$(( CLIENTS - (CLIENTS % CPUS) + CPUS ))
time \
pgbench -h <%= p('postgres.smoke-tests.target.address') %> \
        -p <%= p('postgres.smoke-tests.target.port') %> \
        -U <%= p('postgres.smoke-tests.target.username') %> \
        -c ${CLIENTS} -j ${CPUS} -T 125 -C 2>&1 &
PGBENCH=$!

for x in $(seq 1 120); do
    check || EXITSTATUS=$?
    sleep 1
done

echo
echo "done with tests; waiting for pgbench to finish up"
echo

wait

echo
echo "pgbench exited $?"
echo


psql -h <%= p('postgres.smoke-tests.target.address') %> \
     -p <%= p('postgres.smoke-tests.target.port') %> \
     -U <%= p('postgres.smoke-tests.target.username') %> \
		 -c  "DO LANGUAGE plpgsql \$\$
          DECLARE
              row pg_tables%ROWTYPE;
          BEGIN
            FOR row IN 
                SELECT
                    schemaname,
                    tablename
                FROM
                    pg_catalog.pg_tables
                WHERE
                    tableowner = '<%= p('postgres.smoke-tests.target.username') %>'
                AND
                    tablename LIKE 'pgbench\\_%'
            LOOP
                EXECUTE 'DROP TABLE ' || quote_ident(row.schemaname) || '.' || quote_ident(row.tablename);
                RAISE INFO 'Dropped table: %', quote_ident(row.schemaname) || '.' || quote_ident(row.tablename);
            END LOOP;
          END; \$\$;"

echo "---------------------------------------------"
echo "Errand smoke-tests is complete; exit status $EXITSTATUS"
exit $EXITSTATUS
